apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose --file docker-compose-resolved.yaml --profile k8s convert --out deployment
    kompose.version: 1.31.2 (a92241f79)
  creationTimestamp: null
  labels:
    io.kompose.service: prefect-server
  name: prefect-server
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: prefect-server
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose --file docker-compose-resolved.yaml --profile k8s convert --out deployment
        kompose.version: 1.31.2 (a92241f79)
      creationTimestamp: null
      labels:
        io.kompose.network/surrogate-optimisation-example: "true"
        io.kompose.service: prefect-server
    spec:
      containers:
        - command:
            - /opt/prefect/entrypoint.sh
            - prefect
            - server
            - start
          env:
            - name: PREFECT_API_DATABASE_CONNECTION_URL
              value: postgresql+asyncpg://user:password@prefect-postgres:5432/prefect
            - name: PREFECT_API_URL
              value: http://127.0.0.1:4200/api
            - name: PREFECT_SERVER_API_HOST
              value: 0.0.0.0
            - name: PREFECT_UI_URL
              value: http://127.0.0.1:4200/api
          image: prefecthq/prefect:2.13.2-python3.10
          name: surrogate-optimisation-example-prefect-server
          ports:
            - containerPort: 4200
              hostPort: 4200
              protocol: TCP
          resources: {}
          volumeMounts:
            - mountPath: /root/.prefect
              name: prefect-data
      hostname: prefect-server
      restartPolicy: Always
      terminationGracePeriodSeconds: 10
      volumes:
        - name: prefect-data
          persistentVolumeClaim:
            claimName: prefect-data
status: {}
