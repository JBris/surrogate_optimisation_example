apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose --file docker-compose-resolved.yaml --profile k8s convert --out deployment
    kompose.version: 1.31.2 (a92241f79)
  creationTimestamp: null
  labels:
    io.kompose.service: mlflow
  name: mlflow
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: mlflow
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose --file docker-compose-resolved.yaml --profile k8s convert --out deployment
        kompose.version: 1.31.2 (a92241f79)
      creationTimestamp: null
      labels:
        io.kompose.network/surrogate-optimisation-example: "true"
        io.kompose.service: mlflow
    spec:
      containers:
        - args:
            - mlflow
            - server
            - --serve-artifacts
            - --host
            - 0.0.0.0
            - --port
            - "5000"
            - --backend-store-uri
            - postgresql://user:password@postgres:5432/surrogate-optimisation-example
            - --default-artifact-root
            - s3://mlflow/
            - --expose-prometheus
            - /prometheus
          env:
            - name: AWS_ACCESS_KEY_ID
              value: user
            - name: AWS_SECRET_ACCESS_KEY
              value: password
            - name: MLFLOW_BACKEND_STORE_URI
              value: postgresql://user:password@postgres:5432/surrogate-optimisation-example
            - name: MLFLOW_S3_ENDPOINT_URL
              value: http://minio:9000
          image: ghcr.io/jbris/prefect-surrogate-models:1.0.0
          name: surrogate-optimisation-example-mlflow
          ports:
            - containerPort: 5000
              hostPort: 5000
              protocol: TCP
          resources: {}
          volumeMounts:
            - mountPath: /prometheus
              name: mlflow-prometheus-data
      hostname: mlflow
      restartPolicy: Always
      terminationGracePeriodSeconds: 10
      volumes:
        - name: mlflow-prometheus-data
          persistentVolumeClaim:
            claimName: mlflow-prometheus-data
status: {}
