apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose --file docker-compose-resolved.yaml --profile k8s convert --out deployment
    kompose.version: 1.31.2 (a92241f79)
  creationTimestamp: null
  labels:
    io.kompose.service: grafana
  name: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: grafana
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose --file docker-compose-resolved.yaml --profile k8s convert --out deployment
        kompose.version: 1.31.2 (a92241f79)
      creationTimestamp: null
      labels:
        io.kompose.network/surrogate-optimisation-example: "true"
        io.kompose.service: grafana
    spec:
      containers:
        - env:
            - name: GF_INSTALL_PLUGINS
              value: grafana-clock-panel,grafana-simple-json-datasource,grafana-piechart-panel,grafana-worldmap-panel
          image: grafana/grafana:9.5.5
          name: surrogate-optimisation-example-grafana
          ports:
            - containerPort: 3000
              hostPort: 3000
              protocol: TCP
          resources: {}
          securityContext:
            runAsUser: 0
          volumeMounts:
            - mountPath: /var/lib/grafana
              name: grafana-data
            - mountPath: /etc/grafana/grafana.ini
              name: grafana-claim1
      hostname: grafana
      restartPolicy: Always
      terminationGracePeriodSeconds: 10
      volumes:
        - name: grafana-data
          persistentVolumeClaim:
            claimName: grafana-data
        - name: grafana-claim1
          persistentVolumeClaim:
            claimName: grafana-claim1
status: {}
